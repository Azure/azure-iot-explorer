// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/settings/repositoryLocationList matches snapshot with each type item 1`] = `
<div
  className="location-list"
>
  <t
    behaviour="move"
    onDrop={[Function]}
    orientation="vertical"
  >
    <n
      key="PUBLIC"
    >
      <RepositoryLocationListItem
        index={0}
        item={
          Object {
            "repositoryLocationType": "PUBLIC",
          }
        }
        items={
          Array [
            Object {
              "repositoryLocationType": "PUBLIC",
            },
            Object {
              "repositoryLocationType": undefined,
            },
            Object {
              "repositoryLocationType": undefined,
            },
          ]
        }
        moveCard={[MockFunction]}
        onAddListItem={[MockFunction]}
        onLocalFolderPathChanged={[MockFunction]}
        onMoveItem={[MockFunction]}
        onPrivateRepositoryConnectionStringChanged={[MockFunction]}
        onRemoveListItem={[MockFunction]}
      />
    </n>
    <n>
      <RepositoryLocationListItem
        index={1}
        item={
          Object {
            "repositoryLocationType": undefined,
          }
        }
        items={
          Array [
            Object {
              "repositoryLocationType": "PUBLIC",
            },
            Object {
              "repositoryLocationType": undefined,
            },
            Object {
              "repositoryLocationType": undefined,
            },
          ]
        }
        moveCard={[MockFunction]}
        onAddListItem={[MockFunction]}
        onLocalFolderPathChanged={[MockFunction]}
        onMoveItem={[MockFunction]}
        onPrivateRepositoryConnectionStringChanged={[MockFunction]}
        onRemoveListItem={[MockFunction]}
      />
    </n>
    <n>
      <RepositoryLocationListItem
        index={2}
        item={
          Object {
            "repositoryLocationType": undefined,
          }
        }
        items={
          Array [
            Object {
              "repositoryLocationType": "PUBLIC",
            },
            Object {
              "repositoryLocationType": undefined,
            },
            Object {
              "repositoryLocationType": undefined,
            },
          ]
        }
        moveCard={[MockFunction]}
        onAddListItem={[MockFunction]}
        onLocalFolderPathChanged={[MockFunction]}
        onMoveItem={[MockFunction]}
        onPrivateRepositoryConnectionStringChanged={[MockFunction]}
        onRemoveListItem={[MockFunction]}
      />
    </n>
  </t>
  <CustomizedActionButton
    iconProps={
      Object {
        "iconName": "Add",
      }
    }
    menuProps={
      Object {
        "items": Array [
          Object {
            "disabled": true,
            "key": "PUBLIC",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.public.label",
          },
          Object {
            "disabled": true,
            "key": "LOCAL",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.local.labelInBrowser",
          },
        ],
      }
    }
    text="settings.modelDefinitions.add"
  />
</div>
`;

exports[`components/settings/repositoryLocationList matches snapshot with no items 1`] = `
<div
  className="location-list"
>
  <t
    behaviour="move"
    onDrop={[Function]}
    orientation="vertical"
  />
  <CustomizedActionButton
    iconProps={
      Object {
        "iconName": "Add",
      }
    }
    menuProps={
      Object {
        "items": Array [
          Object {
            "disabled": true,
            "key": "PUBLIC",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.public.label",
          },
          Object {
            "disabled": true,
            "key": "LOCAL",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.local.labelInBrowser",
          },
        ],
      }
    }
    text="settings.modelDefinitions.add"
  />
</div>
`;

exports[`components/settings/repositoryLocationList matches snapshot with public item 1`] = `
<div
  className="location-list"
>
  <t
    behaviour="move"
    onDrop={[Function]}
    orientation="vertical"
  >
    <n
      key="PUBLIC"
    >
      <RepositoryLocationListItem
        index={0}
        item={
          Object {
            "repositoryLocationType": "PUBLIC",
          }
        }
        items={
          Array [
            Object {
              "repositoryLocationType": "PUBLIC",
            },
          ]
        }
        moveCard={[MockFunction]}
        onAddListItem={[MockFunction]}
        onLocalFolderPathChanged={[MockFunction]}
        onMoveItem={[MockFunction]}
        onPrivateRepositoryConnectionStringChanged={[MockFunction]}
        onRemoveListItem={[MockFunction]}
      />
    </n>
  </t>
  <CustomizedActionButton
    iconProps={
      Object {
        "iconName": "Add",
      }
    }
    menuProps={
      Object {
        "items": Array [
          Object {
            "disabled": true,
            "key": "PUBLIC",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.public.label",
          },
          Object {
            "disabled": true,
            "key": "LOCAL",
            "onClick": [Function],
            "text": "settings.modelDefinitions.repositoryTypes.local.labelInBrowser",
          },
        ],
      }
    }
    text="settings.modelDefinitions.add"
  />
</div>
`;
