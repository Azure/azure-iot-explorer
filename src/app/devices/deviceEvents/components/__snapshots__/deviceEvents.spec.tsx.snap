// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deviceEvents deviceEvents in non-pnp context matches snapshot 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Component
    dispatch={[MockFunction]}
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showPnpModeledEvents={false}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
    synchronizationStatus={1}
  />
  <Component
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <Component
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <Component
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <Component
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <Component
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className="scrollable-telemetry"
    >
      <article
        className="device-events-content"
        key="0"
      >
        <h5>
          Wed Feb 17 2021 16:06:00 GMT-0800 (Pacific Standard Time)
          :
        </h5>
        <pre>
          {
  "body": {
    "humid": 123
  },
  "enqueuedTime": "Wed Feb 17 2021 16:06:00 GMT-0800 (Pacific Standard Time)",
  "properties": {
    "iothub-message-schema": "humid"
  }
}
        </pre>
      </article>
    </div>
  </div>
</Stack>
`;

exports[`deviceEvents deviceEvents in pnp context matches snapshot while interface cannot be found 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Component
    dispatch={[Function]}
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showPnpModeledEvents={true}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
    synchronizationStatus={2}
  />
  <Component
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <Component
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <Component
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <Component
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <Component
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className="scrollable-telemetry"
    />
  </div>
</Stack>
`;

exports[`deviceEvents deviceEvents in pnp context matches snapshot while interface definition is retrieved 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Component
    dispatch={[Function]}
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showPnpModeledEvents={true}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
    synchronizationStatus={2}
  />
  <Component
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <Component
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <Component
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <Component
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <Component
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className="scrollable-telemetry"
    />
  </div>
</Stack>
`;
