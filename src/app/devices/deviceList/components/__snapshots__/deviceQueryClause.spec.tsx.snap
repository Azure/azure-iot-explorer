// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeviceQueryClause matches snapshot 1`] = `
<section
  className="search-pill active no-operator"
  key="query-0"
>
  <Dropdown
    ariaLabel="deviceLists.query.searchPills.clause.parameterType.ariaLabel"
    className="parameter-type"
    componentRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    options={
      Array [
        Object {
          "key": "capabilities.iotEdge",
          "text": "deviceLists.query.searchPills.clause.parameterType.items.edge",
        },
        Object {
          "key": "status",
          "text": "deviceLists.query.searchPills.clause.parameterType.items.status",
        },
      ]
    }
    placeholder="deviceLists.query.searchPills.clause.parameterType.placeholder"
  />
  <Dropdown
    ariaLabel="deviceLists.query.searchPills.clause.value.placeholder"
    className="clause-value"
    onChange={[Function]}
    options={
      Array [
        Object {
          "key": "enabled",
          "text": "deviceLists.query.searchPills.clause.value.deviceStatus.enabled",
        },
        Object {
          "key": "disabled",
          "text": "deviceLists.query.searchPills.clause.value.deviceStatus.disabled",
        },
      ]
    }
    placeholder="deviceLists.query.searchPills.clause.value.placeholder"
    selectedKey="enabled"
  />
  <CustomizedIconButton
    ariaLabel="deviceLists.query.searchPills.clause.remove.ariaLabel"
    className="remove-pill"
    data={0}
    iconProps={
      Object {
        "iconName": "Clear",
      }
    }
    onClick={[Function]}
    type="button"
  />
</section>
`;

exports[`DeviceQueryClause matches snapshot without operation 1`] = `
<section
  className="search-pill active no-operator"
  key="query-0"
>
  <Dropdown
    ariaLabel="deviceLists.query.searchPills.clause.parameterType.ariaLabel"
    className="parameter-type"
    componentRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    options={
      Array [
        Object {
          "key": "capabilities.iotEdge",
          "text": "deviceLists.query.searchPills.clause.parameterType.items.edge",
        },
        Object {
          "key": "status",
          "text": "deviceLists.query.searchPills.clause.parameterType.items.status",
        },
      ]
    }
    placeholder="deviceLists.query.searchPills.clause.parameterType.placeholder"
  />
  <Dropdown
    ariaLabel="deviceLists.query.searchPills.clause.value.placeholder"
    className="clause-value"
    onChange={[Function]}
    options={
      Array [
        Object {
          "ariaLabel": "deviceLists.query.searchPills.clause.value.deviceCapability.edge",
          "key": "true",
          "text": "deviceLists.query.searchPills.clause.value.deviceCapability.edge",
        },
        Object {
          "ariaLabel": "deviceLists.query.searchPills.clause.value.deviceCapability.nonEdge",
          "key": "false",
          "text": "deviceLists.query.searchPills.clause.value.deviceCapability.nonEdge",
        },
      ]
    }
    placeholder="deviceLists.query.searchPills.clause.value.placeholder"
    selectedKey="true"
  />
  <CustomizedIconButton
    ariaLabel="deviceLists.query.searchPills.clause.remove.ariaLabel"
    className="remove-pill"
    data={0}
    iconProps={
      Object {
        "iconName": "Clear",
      }
    }
    onClick={[Function]}
    type="button"
  />
</section>
`;
