// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addDevice matches snapshot 1`] = `
<form
  className="add-device"
  onSubmit={[Function]}
>
  <StyledCommandBarBase
    items={
      Array [
        Object {
          "ariaLabel": "deviceLists.commands.save",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Save",
          },
          "key": "Save",
          "name": "deviceLists.commands.save",
          "type": "submit",
        },
        Object {
          "ariaLabel": "deviceLists.commands.close",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Cancel",
          },
          "key": "Cancel",
          "name": "deviceLists.commands.close",
          "onClick": [Function],
        },
      ]
    }
  />
  <div>
    <div
      className="form"
    >
      <StyledTextFieldBase
        ariaLabel="deviceIdentity.deviceID"
        description="deviceIdentity.deviceIDTooltip"
        errorMessage=""
        label="deviceIdentity.deviceID"
        onChange={[Function]}
        required={true}
        value=""
      />
      <div
        className="authentication"
      >
        <StyledChoiceGroup
          label="deviceIdentity.authenticationType.text"
          onChange={[Function]}
          options={
            Array [
              Object {
                "key": "sas",
                "text": "deviceIdentity.authenticationType.symmetricKey.type",
              },
              Object {
                "key": "selfSigned",
                "text": "deviceIdentity.authenticationType.selfSigned.type",
              },
              Object {
                "key": "certificateAuthority",
                "text": "deviceIdentity.authenticationType.ca.type",
              },
            ]
          }
          required={true}
          selectedKey="sas"
        />
        <StyledCheckboxBase
          checked={true}
          className="autoGenerateButton"
          label="deviceIdentity.authenticationType.symmetricKey.autoGenerate"
          onChange={[Function]}
        />
      </div>
      <div
        className="connectivity"
      >
        <LabelWithTooltip
          tooltipText="deviceIdentity.hubConnectivity.tooltip"
        >
          deviceIdentity.hubConnectivity.label
        </LabelWithTooltip>
        <StyledToggleBase
          ariaLabel="deviceIdentity.hubConnectivity.label"
          checked={true}
          offText="deviceIdentity.hubConnectivity.disable"
          onChange={[Function]}
          onText="deviceIdentity.hubConnectivity.enable"
        />
      </div>
    </div>
  </div>
</form>
`;
