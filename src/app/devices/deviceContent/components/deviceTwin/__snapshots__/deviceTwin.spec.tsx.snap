// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`devices/components/deviceTwin snapshot matches snapshot 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "deviceTwin.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceTwin.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "deviceTwin.command.save",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Save",
          },
          "key": "Save",
          "name": "deviceTwin.command.save",
          "onClick": [Function],
        },
      ]
    }
  />
  <Stack
    horizontal={true}
  >
    <StackItem
      align="start"
    >
      <h3>
         
        deviceTwin.headerText
      </h3>
    </StackItem>
    <StackItem
      align="center"
    >
      <StyledTooltipHostBase
        content="deviceTwin.tooltip"
        directionalHint={12}
        id="deviceTwin.tooltip"
      >
        <CustomizedIconButton
          aria-labelledby="tooltip1"
          iconProps={
            Object {
              "iconName": "info",
            }
          }
        />
      </StyledTooltipHostBase>
    </StackItem>
  </Stack>
  <Component
    className="device-detail"
  />
</Fragment>
`;

exports[`devices/components/deviceTwin snapshot matches snapshot with twin 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "deviceTwin.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceTwin.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "deviceTwin.command.save",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Save",
          },
          "key": "Save",
          "name": "deviceTwin.command.save",
          "onClick": [Function],
        },
      ]
    }
  />
  <Stack
    horizontal={true}
  >
    <StackItem
      align="start"
    >
      <h3>
         
        deviceTwin.headerText
      </h3>
    </StackItem>
    <StackItem
      align="center"
    >
      <StyledTooltipHostBase
        content="deviceTwin.tooltip"
        directionalHint={12}
        id="deviceTwin.tooltip"
      >
        <CustomizedIconButton
          aria-labelledby="tooltip2"
          iconProps={
            Object {
              "iconName": "info",
            }
          }
        />
      </StyledTooltipHostBase>
    </StackItem>
  </Stack>
  <article
    className="interface-definition device-detail"
  >
    <div
      className="monaco-editor"
    >
      <Suspense
        fallback={
          <StyledSpinnerBase
            size={3}
            title="loading"
          />
        }
      >
        <ContextConsumer>
          <Component />
        </ContextConsumer>
      </Suspense>
    </div>
  </article>
</Fragment>
`;
