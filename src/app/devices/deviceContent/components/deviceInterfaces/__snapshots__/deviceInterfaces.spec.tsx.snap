// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/devices/deviceInterfaces shows Shimmer when status is working 1`] = `<Component />`;

exports[`components/devices/deviceInterfaces shows interface information when status is failed 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    farItems={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.close",
          "iconProps": Object {
            "iconName": "NavigateBack",
          },
          "key": "NavigateBack",
          "name": "deviceInterfaces.command.close",
          "onClick": [Function],
        },
      ]
    }
    items={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceProperties.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Route
    component={[Function]}
  />
  <Connect(InterfaceNotFoundMessageBox) />
</Fragment>
`;

exports[`components/devices/deviceInterfaces shows interface information when status is fetched 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    farItems={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.close",
          "iconProps": Object {
            "iconName": "NavigateBack",
          },
          "key": "NavigateBack",
          "name": "deviceInterfaces.command.close",
          "onClick": [Function],
        },
      ]
    }
    items={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceProperties.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Route
    component={[Function]}
  />
  <ErrorBoundary
    error="errorBoundary.text"
  >
    <section
      className="pnp-interface-info scrollable-lg"
    >
      <StyledLabelBase
        className="source"
      >
         
        deviceInterfaces.columns.source
        : 
        settings.modelDefinitions.repositoryTypes.public.label
      </StyledLabelBase>
      <CustomizedActionButton
        className="configure-button"
        onClick={[Function]}
      >
        deviceInterfaces.command.configure
      </CustomizedActionButton>
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.id"
        label="deviceInterfaces.columns.id"
        readOnly={true}
        value={null}
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.displayName"
        label="deviceInterfaces.columns.displayName"
        readOnly={true}
        value="--"
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.description"
        label="deviceInterfaces.columns.description"
        readOnly={true}
        value="--"
      />
      <article
        className="interface-definition"
      >
        <div
          className="monaco-editor"
        >
          <Suspense
            fallback={
              <StyledSpinnerBase
                size={3}
                title="loading"
              />
            }
          >
            <ContextConsumer>
              <Component />
            </ContextConsumer>
          </Suspense>
        </div>
      </article>
    </section>
  </ErrorBoundary>
</Fragment>
`;

exports[`components/devices/deviceInterfaces shows interface information when status is fetched 2`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    farItems={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.close",
          "iconProps": Object {
            "iconName": "NavigateBack",
          },
          "key": "NavigateBack",
          "name": "deviceInterfaces.command.close",
          "onClick": [Function],
        },
      ]
    }
    items={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceProperties.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Route
    component={[Function]}
  />
  <ErrorBoundary
    error="errorBoundary.text"
  >
    <section
      className="pnp-interface-info scrollable-lg"
    >
      <StyledLabelBase
        className="source"
      >
         
        deviceInterfaces.columns.source
        : 
        settings.modelDefinitions.repositoryTypes.private.label
      </StyledLabelBase>
      <CustomizedActionButton
        className="configure-button"
        onClick={[Function]}
      >
        deviceInterfaces.command.configure
      </CustomizedActionButton>
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.id"
        label="deviceInterfaces.columns.id"
        readOnly={true}
        value={null}
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.displayName"
        label="deviceInterfaces.columns.displayName"
        readOnly={true}
        value="--"
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.description"
        label="deviceInterfaces.columns.description"
        readOnly={true}
        value="--"
      />
      <article
        className="interface-definition"
      >
        <div
          className="monaco-editor"
        >
          <Suspense
            fallback={
              <StyledSpinnerBase
                size={3}
                title="loading"
              />
            }
          >
            <ContextConsumer>
              <Component />
            </ContextConsumer>
          </Suspense>
        </div>
      </article>
    </section>
  </ErrorBoundary>
</Fragment>
`;

exports[`components/devices/deviceInterfaces shows interface information when status is fetched 3`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    farItems={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.close",
          "iconProps": Object {
            "iconName": "NavigateBack",
          },
          "key": "NavigateBack",
          "name": "deviceInterfaces.command.close",
          "onClick": [Function],
        },
      ]
    }
    items={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceProperties.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Route
    component={[Function]}
  />
  <ErrorBoundary
    error="errorBoundary.text"
  >
    <section
      className="pnp-interface-info scrollable-lg"
    >
      <StyledLabelBase
        className="source"
      >
         
        deviceInterfaces.columns.source
        : 
        settings.modelDefinitions.repositoryTypes.device.label
      </StyledLabelBase>
      <CustomizedActionButton
        className="configure-button"
        onClick={[Function]}
      >
        deviceInterfaces.command.configure
      </CustomizedActionButton>
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.id"
        label="deviceInterfaces.columns.id"
        readOnly={true}
        value={null}
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.displayName"
        label="deviceInterfaces.columns.displayName"
        readOnly={true}
        value="--"
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.description"
        label="deviceInterfaces.columns.description"
        readOnly={true}
        value="--"
      />
      <article
        className="interface-definition"
      >
        <div
          className="monaco-editor"
        >
          <Suspense
            fallback={
              <StyledSpinnerBase
                size={3}
                title="loading"
              />
            }
          >
            <ContextConsumer>
              <Component />
            </ContextConsumer>
          </Suspense>
        </div>
      </article>
    </section>
  </ErrorBoundary>
</Fragment>
`;

exports[`components/devices/deviceInterfaces shows interface information when status is fetched 4`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    farItems={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.close",
          "iconProps": Object {
            "iconName": "NavigateBack",
          },
          "key": "NavigateBack",
          "name": "deviceInterfaces.command.close",
          "onClick": [Function],
        },
      ]
    }
    items={
      Array [
        Object {
          "ariaLabel": "deviceInterfaces.command.refresh",
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "deviceProperties.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Route
    component={[Function]}
  />
  <ErrorBoundary
    error="errorBoundary.text"
  >
    <section
      className="pnp-interface-info scrollable-lg"
    >
      <StyledLabelBase
        className="source"
      >
         
        deviceInterfaces.columns.source
        : 
        --
      </StyledLabelBase>
      <CustomizedActionButton
        className="configure-button"
        onClick={[Function]}
      >
        deviceInterfaces.command.configure
      </CustomizedActionButton>
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.id"
        label="deviceInterfaces.columns.id"
        readOnly={true}
        value={null}
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.displayName"
        label="deviceInterfaces.columns.displayName"
        readOnly={true}
        value="--"
      />
      <Connect(MaskedCopyableTextField)
        allowMask={false}
        ariaLabel="deviceInterfaces.columns.description"
        label="deviceInterfaces.columns.description"
        readOnly={true}
        value="--"
      />
      <article
        className="interface-definition"
      >
        <div
          className="monaco-editor"
        >
          <Suspense
            fallback={
              <StyledSpinnerBase
                size={3}
                title="loading"
              />
            }
          >
            <ContextConsumer>
              <Component />
            </ContextConsumer>
          </Suspense>
        </div>
      </article>
    </section>
  </ErrorBoundary>
</Fragment>
`;
