// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`devices/components/deviceIdentity snapshot matches snapshot 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with CA auth type 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
    />
    <StyledLabelBase>
      deviceIdentity.authenticationType.ca.text
    </StyledLabelBase>
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.ca.connectionString"
      label="deviceIdentity.authenticationType.ca.connectionString"
      labelCallout="deviceIdentity.authenticationType.ca.connectionStringTooltip"
      readOnly={true}
      value=""
    />
    <br />
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      checked={false}
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with SelfSigned auth type 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
    />
    <StyledLabelBase>
      deviceIdentity.authenticationType.selfSigned.text
    </StyledLabelBase>
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.selfSigned.primaryThumbprint"
      label="deviceIdentity.authenticationType.selfSigned.primaryThumbprint"
      labelCallout="deviceIdentity.authenticationType.selfSigned.primaryThumbprintTooltip"
      readOnly={true}
      value="123"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.selfSigned.secondaryThumbprint"
      label="deviceIdentity.authenticationType.selfSigned.secondaryThumbprint"
      labelCallout="deviceIdentity.authenticationType.selfSigned.secondaryThumbprintTooltip"
      readOnly={true}
      value="456"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.selfSigned.connectionString"
      label="deviceIdentity.authenticationType.selfSigned.connectionString"
      labelCallout="deviceIdentity.authenticationType.selfSigned.connectionStringTooltip"
      readOnly={true}
      value=""
    />
    <br />
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      checked={false}
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with SymmetricKey auth type 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
    onRegeneratePrimaryKey={[Function]}
    onRegenerateSecondaryKey={[Function]}
    onSwapKeys={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
      value="device1"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.primaryKey"
      label="deviceIdentity.authenticationType.symmetricKey.primaryKey"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.primaryKeyTooltip"
      onTextChange={[Function]}
      readOnly={false}
      value="key"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.secondaryKey"
      label="deviceIdentity.authenticationType.symmetricKey.secondaryKey"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.secondaryKeyTooltip"
      onTextChange={[Function]}
      readOnly={false}
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.primaryConnectionString"
      label="deviceIdentity.authenticationType.symmetricKey.primaryConnectionString"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.primaryConnectionStringTooltip"
      readOnly={true}
      value="HostName=test-string.azure-devices.net;DeviceId=device1;SharedAccessKey=key"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      label="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionStringTooltip"
      readOnly={true}
      value=""
    />
    <br />
    <CollapsibleSection
      expanded={false}
      label="deviceIdentity.authenticationType.sasToken.label"
      tooltipText="deviceIdentity.authenticationType.sasToken.toolTip"
    >
      <div
        className="sas-token-section"
      >
        <StyledWithResponsiveMode
          className="sas-token-key-field"
          label="deviceIdentity.authenticationType.sasToken.symmetricKey"
          onChange={[Function]}
          options={
            Array [
              Object {
                "key": "key",
                "text": "deviceIdentity.authenticationType.symmetricKey.primaryKey",
              },
              Object {
                "key": undefined,
                "text": "deviceIdentity.authenticationType.symmetricKey.secondaryKey",
              },
            ]
          }
          required={true}
        />
        <CustomizedSpinButton
          className="sas-token-expiration-field"
          decrementButtonIcon={
            Object {
              "iconName": "ChevronDownSmall",
            }
          }
          disabled={false}
          incrementButtonIcon={
            Object {
              "iconName": "ChevronUpSmall",
            }
          }
          label="deviceIdentity.authenticationType.sasToken.expiration"
          labelPosition={0}
          max={9007199254740991}
          min={0}
          onBlur={[Function]}
          onDecrement={[Function]}
          onIncrement={[Function]}
          step={1}
          value="5"
        />
        <Connect(MaskedCopyableTextField)
          allowMask={true}
          ariaLabel="deviceIdentity.authenticationType.sasToken.textField.ariaLabel"
          label="deviceIdentity.authenticationType.sasToken.textField.label"
          readOnly={true}
          value=""
        />
        <CustomizedPrimaryButton
          className="sas-token-generate-button"
          disabled={true}
          onClick={[Function]}
          text="deviceIdentity.authenticationType.sasToken.generateButton.text"
          title="deviceIdentity.authenticationType.sasToken.generateButton.title"
        />
      </div>
    </CollapsibleSection>
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      checked={false}
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with Synchronization Status of updating 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
    onRegeneratePrimaryKey={[Function]}
    onRegenerateSecondaryKey={[Function]}
    onSwapKeys={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.primaryKey"
      label="deviceIdentity.authenticationType.symmetricKey.primaryKey"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.primaryKeyTooltip"
      onTextChange={[Function]}
      readOnly={false}
      value="key"
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.secondaryKey"
      label="deviceIdentity.authenticationType.symmetricKey.secondaryKey"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.secondaryKeyTooltip"
      onTextChange={[Function]}
      readOnly={false}
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.primaryConnectionString"
      label="deviceIdentity.authenticationType.symmetricKey.primaryConnectionString"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.primaryConnectionStringTooltip"
      readOnly={true}
      value=""
    />
    <Connect(MaskedCopyableTextField)
      allowMask={true}
      ariaLabel="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      label="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      labelCallout="deviceIdentity.authenticationType.symmetricKey.secondaryConnectionStringTooltip"
      readOnly={true}
      value=""
    />
    <br />
    <CollapsibleSection
      expanded={false}
      label="deviceIdentity.authenticationType.sasToken.label"
      tooltipText="deviceIdentity.authenticationType.sasToken.toolTip"
    >
      <div
        className="sas-token-section"
      >
        <StyledWithResponsiveMode
          className="sas-token-key-field"
          label="deviceIdentity.authenticationType.sasToken.symmetricKey"
          onChange={[Function]}
          options={
            Array [
              Object {
                "key": "key",
                "text": "deviceIdentity.authenticationType.symmetricKey.primaryKey",
              },
              Object {
                "key": undefined,
                "text": "deviceIdentity.authenticationType.symmetricKey.secondaryKey",
              },
            ]
          }
          required={true}
        />
        <CustomizedSpinButton
          className="sas-token-expiration-field"
          decrementButtonIcon={
            Object {
              "iconName": "ChevronDownSmall",
            }
          }
          disabled={false}
          incrementButtonIcon={
            Object {
              "iconName": "ChevronUpSmall",
            }
          }
          label="deviceIdentity.authenticationType.sasToken.expiration"
          labelPosition={0}
          max={9007199254740991}
          min={0}
          onBlur={[Function]}
          onDecrement={[Function]}
          onIncrement={[Function]}
          step={1}
          value="5"
        />
        <Connect(MaskedCopyableTextField)
          allowMask={true}
          ariaLabel="deviceIdentity.authenticationType.sasToken.textField.ariaLabel"
          label="deviceIdentity.authenticationType.sasToken.textField.label"
          readOnly={true}
          value=""
        />
        <CustomizedPrimaryButton
          className="sas-token-generate-button"
          disabled={true}
          onClick={[Function]}
          text="deviceIdentity.authenticationType.sasToken.generateButton.text"
          title="deviceIdentity.authenticationType.sasToken.generateButton.title"
        />
      </div>
    </CollapsibleSection>
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      checked={false}
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
    <StyledOverlayBase />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with Synchronization Status of working 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
    onRegeneratePrimaryKey={[Function]}
    onRegenerateSecondaryKey={[Function]}
    onSwapKeys={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Component />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with auth type of None 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
      value="device1"
    />
    <br />
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      checked={false}
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
  </div>
</Fragment>
`;

exports[`devices/components/deviceIdentity snapshot matches snapshot with identity wrapper 1`] = `
<Fragment>
  <DeviceIdentityCommandBar
    disableSave={true}
    handleSave={[Function]}
  />
  <Component
    headerText="deviceIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <Connect(MaskedCopyableTextField)
      allowMask={false}
      ariaLabel="deviceIdentity.deviceID"
      label="deviceIdentity.deviceID"
      labelCallout="deviceIdentity.deviceIDTooltip"
      readOnly={true}
    />
    <br />
    <StyledToggleBase
      ariaLabel="deviceIdentity.hubConnectivity.label"
      label="deviceIdentity.hubConnectivity.label"
      offText="deviceIdentity.hubConnectivity.disable"
      onChange={[Function]}
      onText="deviceIdentity.hubConnectivity.enable"
    />
  </div>
</Fragment>
`;
