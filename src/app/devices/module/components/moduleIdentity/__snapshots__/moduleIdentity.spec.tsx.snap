// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`devices/components/moduleIdentity snapshot matches snapshot when fetch failed 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Stack
    horizontal={true}
  >
    <StackItem
      align="start"
    >
      <h3>
         
        moduleIdentity.headerText
      </h3>
    </StackItem>
    <StackItem
      align="center"
    >
      <StyledTooltipHostBase
        content={
          <StyledLinkBase
            href="moduleIdentity.link"
            target="_blank"
          >
            moduleIdentity.tooltip
          </StyledLinkBase>
        }
        directionalHint={12}
        id="moduleIdentity.tooltip"
      >
        <CustomizedIconButton
          aria-labelledby="tooltip2"
          iconProps={
            Object {
              "iconName": "info",
            }
          }
        />
      </StyledTooltipHostBase>
    </StackItem>
  </Stack>
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <StyledWithViewportComponent
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "isResizable": true,
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "isResizable": true,
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "isResizable": true,
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
              "onRender": [Function],
            },
          ]
        }
        items={Array []}
        selectionMode={0}
      />
    </div>
    moduleIdentity.errorFetching
  </div>
</Fragment>
`;

exports[`devices/components/moduleIdentity snapshot matches snapshot while loading 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Stack
    horizontal={true}
  >
    <StackItem
      align="start"
    >
      <h3>
         
        moduleIdentity.headerText
      </h3>
    </StackItem>
    <StackItem
      align="center"
    >
      <StyledTooltipHostBase
        content={
          <StyledLinkBase
            href="moduleIdentity.link"
            target="_blank"
          >
            moduleIdentity.tooltip
          </StyledLinkBase>
        }
        directionalHint={12}
        id="moduleIdentity.tooltip"
      >
        <CustomizedIconButton
          aria-labelledby="tooltip1"
          iconProps={
            Object {
              "iconName": "info",
            }
          }
        />
      </StyledTooltipHostBase>
    </StackItem>
  </Stack>
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <StyledWithViewportComponent
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "isResizable": true,
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "isResizable": true,
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "isResizable": true,
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
              "onRender": [Function],
            },
          ]
        }
        items={Array []}
        selectionMode={0}
      />
    </div>
    <Component />
  </div>
</Fragment>
`;

exports[`devices/components/moduleIdentity snapshot matches snapshot with moduleIdentityList 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <Stack
    horizontal={true}
  >
    <StackItem
      align="start"
    >
      <h3>
         
        moduleIdentity.headerText
      </h3>
    </StackItem>
    <StackItem
      align="center"
    >
      <StyledTooltipHostBase
        content={
          <StyledLinkBase
            href="moduleIdentity.link"
            target="_blank"
          >
            moduleIdentity.tooltip
          </StyledLinkBase>
        }
        directionalHint={12}
        id="moduleIdentity.tooltip"
      >
        <CustomizedIconButton
          aria-labelledby="tooltip3"
          iconProps={
            Object {
              "iconName": "info",
            }
          }
        />
      </StyledTooltipHostBase>
    </StackItem>
  </Stack>
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <StyledWithViewportComponent
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "isResizable": true,
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "isResizable": true,
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "isResizable": true,
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
              "onRender": [Function],
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
              "onRender": [Function],
            },
          ]
        }
        items={
          Array [
            Object {
              "authentication": null,
              "deviceId": "testDevice",
              "moduleId": "testModule",
            },
          ]
        }
        selectionMode={0}
      />
    </div>
  </div>
</Fragment>
`;
