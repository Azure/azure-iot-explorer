// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`devices/components/addModuleIdentity snapshot matches snapshot while loading 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.save",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Save",
          },
          "key": "Save",
          "name": "moduleIdentity.command.save",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.cancel",
          "iconProps": Object {
            "iconName": "Cancel",
          },
          "key": "Cancel",
          "name": "moduleIdentity.command.cancel",
          "onClick": [Function],
        },
      ]
    }
  />
  <HeaderView
    headerText="moduleIdentity.headerText"
  />
  <div
    className="device-detail"
  >
    <StyledTextFieldBase
      ariaLabel="moduleIdentity.moduleId"
      description="moduleIdentity.moduleIdTooltip"
      errorMessage=""
      label="moduleIdentity.moduleId"
      onChange={[Function]}
      required={true}
      value=""
    />
    <div
      className="authentication"
    >
      <StyledChoiceGroup
        label="moduleIdentity.authenticationType.text"
        onChange={[Function]}
        options={
          Array [
            Object {
              "key": "sas",
              "text": "moduleIdentity.authenticationType.symmetricKey.type",
            },
            Object {
              "key": "selfSigned",
              "text": "moduleIdentity.authenticationType.selfSigned.type",
            },
            Object {
              "key": "certificateAuthority",
              "text": "moduleIdentity.authenticationType.ca.type",
            },
          ]
        }
        required={true}
        selectedKey="sas"
      />
      <StyledCheckboxBase
        checked={true}
        className="autoGenerateButton"
        label="moduleIdentity.authenticationType.symmetricKey.autoGenerate"
        onChange={[Function]}
      />
    </div>
  </div>
</Fragment>
`;
