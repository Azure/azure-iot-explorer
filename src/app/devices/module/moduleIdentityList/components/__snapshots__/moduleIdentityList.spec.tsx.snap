// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModuleIdentityList snapshot matches snapshot when fetch failed 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <HeaderView
    headerText="moduleIdentity.headerText"
    link="moduleIdentity.link"
    tooltip="moduleIdentity.tooltip"
  />
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <ResizableDetailsList
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.modelId",
              "fieldName": "modelId",
              "key": "modelId",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.modelId",
            },
          ]
        }
        items={Array []}
        onRenderItemColumn={[Function]}
        selectionMode={0}
      />
    </div>
    moduleIdentity.errorFetching
  </div>
</Fragment>
`;

exports[`ModuleIdentityList snapshot matches snapshot while loading 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <HeaderView
    headerText="moduleIdentity.headerText"
    link="moduleIdentity.link"
    tooltip="moduleIdentity.tooltip"
  />
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <ResizableDetailsList
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.modelId",
              "fieldName": "modelId",
              "key": "modelId",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.modelId",
            },
          ]
        }
        items={Array []}
        onRenderItemColumn={[Function]}
        selectionMode={0}
      />
    </div>
    <MultiLineShimmer />
  </div>
</Fragment>
`;

exports[`ModuleIdentityList snapshot matches snapshot with moduleIdentityList 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.command.add",
          "iconProps": Object {
            "iconName": "BoxAdditionSolid",
          },
          "key": "BoxAdditionSolid",
          "name": "moduleIdentity.command.add",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.command.refresh",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.command.refresh",
          "onClick": [Function],
        },
      ]
    }
  />
  <HeaderView
    headerText="moduleIdentity.headerText"
    link="moduleIdentity.link"
    tooltip="moduleIdentity.tooltip"
  />
  <div
    className="device-detail"
  >
    <div
      className="list-detail"
    >
      <ResizableDetailsList
        columns={
          Array [
            Object {
              "ariaLabel": "moduleIdentity.columns.moduleId",
              "fieldName": "moduleId",
              "key": "moduleId",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.moduleId",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionState",
              "fieldName": "connectionState",
              "key": "connectionState",
              "maxWidth": 200,
              "minWidth": 50,
              "name": "moduleIdentity.columns.connectionState",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.connectionStateLastUpdated",
              "fieldName": "connectionStateLastUpdated",
              "key": "connectionStateLastUpdated",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.connectionStateLastUpdated",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.lastActivityTime",
              "fieldName": "lastActivityTime",
              "key": "lastActivityTime",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.lastActivityTime",
            },
            Object {
              "ariaLabel": "moduleIdentity.columns.modelId",
              "fieldName": "modelId",
              "key": "modelId",
              "maxWidth": 250,
              "minWidth": 150,
              "name": "moduleIdentity.columns.modelId",
            },
          ]
        }
        items={
          Array [
            Object {
              "authentication": null,
              "deviceId": "testDevice",
              "moduleId": "testModule",
            },
          ]
        }
        onRenderItemColumn={[Function]}
        selectionMode={0}
      />
    </div>
    <MultiLineShimmer />
  </div>
</Fragment>
`;
