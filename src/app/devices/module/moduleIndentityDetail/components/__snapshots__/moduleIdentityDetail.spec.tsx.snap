// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModuleIdentityDetail snapshot matches snapshot after certificateAuthority module identity is fetched 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
    <StyledLabelBase>
      moduleIdentity.authenticationType.ca.text
    </StyledLabelBase>
  </div>
</Fragment>
`;

exports[`ModuleIdentityDetail snapshot matches snapshot after module identity is fetched 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
  </div>
</Fragment>
`;

exports[`ModuleIdentityDetail snapshot matches snapshot after sas module identity is fetched 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.symmetricKey.primaryKey"
      label="moduleIdentity.authenticationType.symmetricKey.primaryKey"
      labelCallout="moduleIdentity.authenticationType.symmetricKey.primaryKeyTooltip"
      value="mock_key_1"
    />
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.symmetricKey.secondaryKey"
      label="moduleIdentity.authenticationType.symmetricKey.secondaryKey"
      labelCallout="moduleIdentity.authenticationType.symmetricKey.secondaryKeyTooltip"
      value="mock_key_2"
    />
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.symmetricKey.primaryConnectionString"
      label="moduleIdentity.authenticationType.symmetricKey.primaryConnectionString"
      value="HostName=hostName;DeviceId=newdevice;ModuleId=moduleId;SharedAccessKey=mock_key_1"
    />
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      label="moduleIdentity.authenticationType.symmetricKey.secondaryConnectionString"
      value="HostName=hostName;DeviceId=newdevice;ModuleId=moduleId;SharedAccessKey=mock_key_2"
    />
    <SasTokenGenerationView
      activeAzureResourceHostName="hostName"
      moduleIdentity={
        Object {
          "authentication": Object {
            "symmetricKey": Object {
              "primaryKey": "mock_key_1",
              "secondaryKey": "mock_key_2",
            },
            "type": "sas",
            "x509Thumbprint": null,
          },
          "deviceId": "deviceId",
          "moduleId": "moduleId",
        }
      }
    />
  </div>
</Fragment>
`;

exports[`ModuleIdentityDetail snapshot matches snapshot after self signed module identity is fetched 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
    <StyledLabelBase>
      moduleIdentity.authenticationType.selfSigned.text
    </StyledLabelBase>
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.selfSigned.primaryThumbprint"
      label="moduleIdentity.authenticationType.selfSigned.primaryThumbprint"
      labelCallout="moduleIdentity.authenticationType.selfSigned.primaryThumbprintTooltip"
      value="thumbprint1"
    />
    <MaskedCopyableTextField
      allowMask={true}
      ariaLabel="moduleIdentity.authenticationType.selfSigned.secondaryThumbprint"
      label="moduleIdentity.authenticationType.selfSigned.secondaryThumbprint"
      labelCallout="moduleIdentity.authenticationType.selfSigned.secondaryThumbprintTooltip"
      value="thumbprint2"
    />
  </div>
</Fragment>
`;

exports[`ModuleIdentityDetail snapshot matches snapshot showing delete confirmation 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": false,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
    <StyledLabelBase>
      moduleIdentity.authenticationType.ca.text
    </StyledLabelBase>
    <div
      role="dialog"
    >
      <Dialog
        dialogContentProps={
          Object {
            "title": "moduleIdentity.detail.deleteConfirmation",
            "type": 2,
          }
        }
        hidden={false}
        modalProps={
          Object {
            "isBlocking": true,
          }
        }
        onDismiss={[Function]}
      >
        <StyledDialogFooterBase>
          <CustomizedPrimaryButton
            onClick={[Function]}
            text="deviceLists.commands.delete.confirmationDialog.confirm"
          />
          <CustomizedDefaultButton
            onClick={[Function]}
            text="deviceLists.commands.delete.confirmationDialog.cancel"
          />
        </StyledDialogFooterBase>
      </Dialog>
    </div>
  </div>
</Fragment>
`;

exports[`ModuleIdentityDetail snapshot matches snapshot while loading 1`] = `
<Fragment>
  <StyledCommandBarBase
    className="command"
    items={
      Array [
        Object {
          "ariaLabel": "moduleIdentity.detail.command.refresh",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Refresh",
          },
          "key": "Refresh",
          "name": "moduleIdentity.detail.command.refresh",
          "onClick": [Function],
        },
        Object {
          "ariaLabel": "moduleIdentity.detail.command.delete",
          "disabled": true,
          "iconProps": Object {
            "iconName": "Delete",
          },
          "key": "Delete",
          "name": "moduleIdentity.detail.command.delete",
          "onClick": [Function],
        },
      ]
    }
  />
  <div
    className="device-detail"
  >
    <MaskedCopyableTextField
      allowMask={false}
      ariaLabel="moduleIdentity.moduleId"
      label="moduleIdentity.moduleId"
      labelCallout="moduleIdentity.moduleIdTooltip"
      value="moduleId"
    />
    <MultiLineShimmer />
  </div>
</Fragment>
`;
