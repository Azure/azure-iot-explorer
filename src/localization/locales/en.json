{
    "common": {
        "close": "Close",
        "learnMore": "Learn more",
        "loading": "Loading...",
        "maskedCopyableTextField": {
            "toggleMask": {
                "label": "Toggle Mask",
                "ariaLabel": "Toggle mask"
            },
            "copy": {
                "label": "Copy Contents",
                "ariaLabel": "Copy contents"
            }
        },
        "confirmationDialog": {
            "title": "Confirmation",
            "yes": "Yes",
            "no": "No"
        }
    },
    "header": {
        "applicationName": "Azure IoT explorer",
        "search": {
            "watermark": "Find on page"
        },
        "notifications": {
            "hide":"Hide notifications",
            "show": "Notifications",
            "dismiss": "dismiss all",
            "panel": {
                "title": "Notifications",
                "noNotifications": "No new notifications for this session"
            }
        },
        "questions": {
            "launch": "Open ???"
        },
        "settings": {
            "launch": "Settings"
        }
    },
    "settings": {
        "headerText": "Settings",
        "configuration": {
            "headerText": "App configurations",
            "connectionString": {
                "label": "IoT hub connection string",
                "sublabel": "Where do I get this?",
                "link": "https://aka.ms/iot-connection-strings"
            }
        },
        "modelDefinitions": {
            "add": "New",
            "headerText": "We'll look for your model definition in the following locations (in order):",
            "helpText": "Drag and drop to change the order.",
            "repositoryTypes": {
                "public": {
                    "label":"Public repository",
                    "infoText": ""
                },
                "private": {
                    "label":"Company repository",
                    "infoText": "",
                    "textBoxLabel": "Company model repository connection string",
                    "placeholder": "Please fill in this required field in order to proceed"
                },
                "device": {
                    "label":"On the connected device",
                    "infoText": ""
                }
            }
        },
        "questions": {
            "headerText": "Help:",
            "questions":{
                "documentation": {
                    "text":"IoT Plug and Play documentation",
                    "link": "https://aka.ms/azure-iot-explorer-documentation"
                }
            }
        },
        "footerText": "You can come back to Settings and make changes later.",
        "save": "Save and Connect",
        "cancel": "Close",
        "confirmationMessage": "Are you sure you want to close without saving?",
        "theme": {
            "headerText": "Application theme",
            "label": "Theme",
            "darkTheme": "Dark",
            "lightTheme": "Light"
        }
    },
    "breadcrumb": {
        "hub": "Hub {{hubName}}",
        "devices": "Devices",
        "addDevice": "Create a device"
    },
    "deviceContent": {
        "start": "Select a device to start",
        "navBar": {
            "identity": "Device identity",
            "twin": "Device twin",
            "properties": "Properties (non-writable)",
            "settings": "Properties (writable)",
            "commands": "Commands",
            "interfaces": "Interface",
            "events": "Telemetry",
            "eventsPerInterface": "Telemetry",
            "methods": "Direct method",
            "cloudToDeviceMessage": "Cloud-to-device message",
            "pnp": "DIGITAL TWIN",
            "nonpnp": "DEVICE",
            "add": "Create device identity",
            "collapse": "Collapse",
            "expand": "Expand"
        },
        "value": "Value"
    },
    "connectivityPane": {
        "header": "App configurations",
        "connectionStringTextBox": {
            "label": "IoT hub connection string",
            "errorMessages": {
                "required": "Connection string is required",
                "invalid": "Invalid connection string"
            },
            "subLabel": "Where do I get this?"
        },
        "connectionStringCheckbox": {
            "label": "Remember my connection string",
            "ariaLabel": "check box for remember my connection string",
            "tooltip": "The connection string will be stored in the browser local storage. (We will remember up to 5 hub connection strings)"
        },
        "notes": "For Plug and Play devices, we'll look for your model definition in the public repository first, and then weâ€™ll search your connected devices. To change how and where we search, open Settings.",
        "saveButton": {
            "label": "Connect"
        },
        "dropDown": {
            "newEntry": "(New) Add a IoT hub connection string",
            "copyButton": "Copy connection string to clipboard"
        }
    },
    "deviceIdentity": {
        "headerText": "{{deviceId}} identity information",
        "deviceID": "Device ID",
        "deviceIDTooltip": "Device identity used for device authentication and access control",
        "authenticationType": {
            "text": "Authentication type",
            "symmetricKey": {
                "autoGenerate": "Auto-generate keys",
                "type": "Symmetric key",
                "primaryKey": "Primary key",
                "secondaryKey": "Secondary key",
                "primaryConnectionString": "Primary connection string",
                "primaryConnectionStringTooltip": "The primary symmetric shared access key stored in base64 format",
                "secondaryConnectionString": "Secondary connection string",
                "secondaryConnectionStringTooltip": "The secondary symmetric shared access key stored in base64 format",
                "generatePrimaryKey": "Generate primary key",
                "generateSecondaryKey": "Generate secondary key"
            },
            "ca": {
                "type": "X.509 CA signed",
                "text": "This device is being authenticated through a CA Certificate."
            },
            "selfSigned": {
                "type": "X.509 self-signed",
                "text": "This device is being authenticated using an X.509 certificate.",
                "primaryThumbprint": "Primary thumbprint",
                "primaryThumbprintTooltip": "The primary X.509 thumbprint representing the SHA-1 or SHA-256 hash of the X.509 certificate. Thumbprint values other than 40 hex characters for SHA-1 and 64 hex characters for SHA-256 are not accepted.",
                "secondaryThumbprint": "Secondary thumbprint",
                "secondaryThumbprintTooltip": "The secondary X.509 thumbprint representing the SHA-1 or SHA-256 hash of the X.509 certificate. Thumbprint values other than 40 hex characters for SHA-1 and 64 hex characters for SHA-256 are not accepted."
            }
        },
        "hubConnectivity": {
            "label": "Connect this device to IoT hub",
            "tooltip": "Enable or Disable the device interaction with the IoT Hub",
            "enable": "Enable",
            "enabled": "Enabled",
            "disable": "Disable",
            "disabled": "Disabled"
        },
        "commands": {
            "save": "Save",
            "manageKeys": {
                "label": "Manage keys",
                "ariaLabel": "Manage keys for device"
            },
            "regeneratePrimary": {
                "ariaLabel": "Regenerate primary key",
                "label": "Regenerate primary key"
            },
            "regenerateSecondary": {
                "ariaLabel": "Regenerate secondary key",
                "label": "Regenerate secondary key"
            },
            "swapKeys": {
                "ariaLabel": "Swap keys",
                "label": "Swap keys"
            }
        },
        "validation": {
            "invalidDeviceId": "Invalid characters in device ID",
            "invalidKey": "Invalid key",
            "invalidThumbprint": "Invalid thumbprint"
        }
    },
    "deviceLists": {
        "paging": {
            "pages": "Pages:"
        },
        "loadingDevice": "Loading devices",
        "noDevice": "No devices",
        "noData": "None",
        "columns": {
            "deviceId": {
                "label": "Device ID",
                "infoText": "Device identity used for device authentication and access control"
            },
            "status": {
                "label": "Status",
                "infoText": "The current status of the device"
            },
            "connection": "Connection state",
            "lastActivityTime": "Last activity time",
            "statusUpdatedTime":"Last status update time",
            "cloudToDeviceMessageCount": "Cloud to device message count",
            "authenticationType": "Authentication type",
            "isEdgeDevice": {
                "label": "Edge device",
                "yes": "Is Edge device",
                "no": "Is not Edge device"
            },
            "isPnpDevice": "IoT Plug and Play device",
            "interfaces": "Interfaces"
        },
        "commands": {
            "add": "New",
            "close": "Cancel",
            "delete": {
                "buttonText": "Delete",
                "confirmationDialog": {
                    "title": "Delete from IoT Hub?",
                    "subText": "Review carefully. Deleting this device will also remove it from your IoT hub and may have consequences for other using the same Hub or device code.",
                    "confirm" : "Delete",
                    "cancel": "Cancel"
                }
            },
            "refresh": "Refresh",
            "save": "Create"
        },
        "query": {
            "deviceId": {
                "placeholder": "Query by device ID...",
                "ariaLabel": "Query by device ID",
                "searchButton": {
                    "title": "Search",
                    "ariaLabel": "Execute Search by device id and no additional clauses"
                }
            },
            "searchPills": {
                "add": {
                    "title": "Add query parameter",
                    "ariaLabel": "Add query parameter",
                    "text": "Add query parameter"
                },
                "search": {
                    "title": "Search",
                    "ariaLabel": "Execute search with specified clauses and without device Id.",
                    "text": "Search"
                },
                "clause": {
                    "parameterType": {
                        "title":"Parameter type",
                        "ariaLabel": "Type of query clause",
                        "items": {
                            "capabilityModelId":"Capability model ID",
                            "interfaceId": "Interface ID",
                            "propertyValue": "Property value",
                            "status": "Status",
                            "lastActivityTime": "Last activity time",
                            "statusUpdateTime": "Status update time"
                        }
                    },
                    "operationType": {
                        "title": "Operation type",
                        "ariaLabel": "Choose a comparison type for this clause"
                    },
                    "value": {
                        "placeholder": "Enter value...",
                        "ariaLabel": "Enter a value for this clause",
                        "title": "Enter value..."
                    },
                    "remove": {
                        "title": "Remove",
                        "ariaLabel": "Remove this clause"
                    }
                }
            }
        },
        "messageBar": {
            "message": "{{version}} has been released.",
            "link": "Please click here to download."
        }
    },
    "deviceTwin": {
        "notFound": "No device twin data found",
        "headerText": "Device twin",
        "command" : {
            "refresh": "Refresh",
            "save": "Save"
        }
    },
    "deviceProperties": {
        "command" : {
            "refresh": "Refresh",
            "openReportedValuePanel": "Click to view value"
        },
        "headerText": "Non-writable properties",
        "noProperty": "No properties",
        "columns": {
            "name": "Name (Display Name / Description)",
            "value": "Value",
            "schema": "Schema",
            "unit": "Unit",
            "error": "value does not match schema"
        },
        "editor": {
            "label": "Property schema '{{schema}}' is not yet supported in UI forms. Please use the JSON editor below to view reported value"
        }
    },
    "deviceSettings": {
        "previewPayloadButtonText": "Preview payload",
        "command" : {
            "refresh": "Refresh",
            "submit": "Update writable property",
            "openReportedValuePanel": "Click to view reported",
            "openDesiredValuePanel": "Click to edit",
            "expandAll": "Expand all",
            "expand": "Expand",
            "collapseAll": "Collapse all",
            "collapse": "Collapse"
        },
        "headerText": "Writable properties",
        "noSetting": "No settings",
        "syncStatus": {
            "label": "Sync status : {{status}}",
            "synced": "synced",
            "syncing": "syncing",
            "failed": "failed"
        },
        "desiredState": {
            "success": "Success",
            "synching": "Synching...",
            "error": "Error",
            "unknown": "Status Code: {{code}}"
        },
        "columns": {
            "name": "Name (Display Name / Description)",
            "schema": "Schema",
            "unit": "Unit",
            "reportedValue": "Reported Value (Status)",
            "reportedValueTooltip": "Reported value is updated asynchronously. Please click 'Refresh' button on the top to get latest value manually",
            "error": "value does not match schema"
        },
        "panel": {
            "title": "Reported value"
        }
    },
    "deviceCommands": {
        "command" : {
            "refresh": "Refresh",
            "submit": "Send command",
            "expandAll": "Expand all",
            "expand": "Expand",
            "collapseAll": "Collapse all",
            "collapse": "Collapse"
        },
        "headerText": "Commands",
        "noCommands": "No commands",
        "columns": {
            "name": "Name (Display Name / Description)",
            "schema": {
                "request": "Request schema",
                "response": "Response schema"
            },
            "type": "Command type"
        }
    },
    "deviceInterfaces": {
        "command" : {
            "refresh": "Refresh",
            "configure": "Configure"
        },
        "columns": {
            "source": "Source",
            "noSource": "Failed to get interface definition",
            "displayName": "Name",
            "description": "Description"
        },
        "headerText": "Interface ID {{interfaceId}}",
        "noInterfaces": "No interfaces",
        "interfaceNotFound": "We are not able to retrieve interface model definition. Please click 'Configure' button below to see how we resolve model definition."
    },
    "deviceEvents": {
        "command" : {
            "refresh": "Refresh",
            "clearEvents": "Clear events",
            "showSystemProperties": "Show system properties",
            "start": "Start",
            "stop": "Stop"
        },
        "consumerGroups": {
            "label": "Consumer Group",
            "tooltip": "Consumer groups are used by applications to pull data from the IoT Hub. To change the current consumer group, stop monitoring telemetry."
        },
        "headerText": "Telemetry",
        "interfaceDropDown": {
            "label": "Select interface to filter telemetry",
            "placeHolder": "Select interface"
        },
        "infiniteScroll": {
            "loading": "Receiving events..."
        },
        "event": {
            "body": "Body: ",
            "enqueuedTime": "Enqueued time: ",
            "properties": "Properties: "
        },
        "columns": {
            "displayName": "Name",
            "timestamp": "Enqueue time",
            "schema": "Schema",
            "unit": "Unit",
            "value": "Value",
            "error": {
                "key": {
                    "label": "value does not match schema",
                    "errorContent": "key is not {{keyName}}"
                },
                "value": {
                    "label": "value does not match schema"
                }
            }
        }
    },
    "directMethod": {
        "headerText": "Direct method",
        "methodName": "Method name",
        "methodNamePlaceHolder": "The name of the Direct method to invoke on this device",
        "connectionTimeout": "Connection timeout in seconds",
        "connectionTimeoutTooltip": "Number of seconds to wait until a connection is successfully made.",
        "responseTimeout": "Response timeout in seconds",
        "responseTimeoutTooltip": "Number of seconds to wait until a result is received from the Direct method.",
        "invokeMethodButtonText": "Invoke method",
        "payload" : "Payload",
        "payloadTooltip" : "The payload for the Direct method to invoke on this device which needs to be in JSON format",
        "result" : "Result"
    },
    "cloudToDeviceMessage": {
        "headerText": "Cloud-to-device message",
        "sendMessageButtonText": "Send message to device",
        "body" : "Message body",
        "bodyTooltip" : "The body of the message to send to the device.",
        "addTimestamp": "Add timestamp to message body",
        "properties": {
            "customProperties": "Properties",
            "systemProperties": "System properties",
            "collapse": {
                "open": "Open to edit properties",
                "close": "Collapse"
            },
            "key": "Key",
            "keyDup": "Key must be unique",
            "value": "Value",
            "addCustomProperty": "Add custom property",
            "addSystemProperty": "Add system property",
            "delete": "Delete",
            "tooltip": "The properties of the message to be sent to this device.",
            "toggleSelectionColumnAriaLabel": "Toggle selection",
            "selectAllCheckboxAriaLabel": "Toggle selection for all",
            "rowCheckBoxAriaLabel": "Row checkbox"
        },
        "output" : "Output"
    },
    "noMatchError": {
        "title": "404 - Not found",
        "description": "The page you are looking is unavailable.",
        "goHome" : "GO TO HOMEPAGE"
    },
    "notifications": {
        "savedToIotHubConnectionString": "Successfully saved connection string for IoT hub {{hostName}}",
        "getDeviceIdentityOnError": "Failed to get device {{deviceId}}'s identity: {{error}}",
        "getDeviceListOnError": "Failed to retrieve device list: {{error}}",
        "getDeviceListGenericErrorHelp": "Failed to retrieve device list. It is possibly due to an invalid IoT hub connection string",
        "getDeviceTwinOnError": "Failed to get device {{deviceId}}'s twin: {{error}}",
        "getDigitalTwinInterfacePropertiesOnError": "Failed to get properties of digital twin interfaces on device {{deviceId}}: {{error}}",
        "getInterfaceModelOnError": "Failed to get interface model definition {{interfaceId}}",
        "updateDeviceTwinOnError": "Failed to update device twin on device {{deviceId}}: {{error}}",
        "updateDeviceTwinOnSuccess": "Successfully updated device twin on device {{deviceId}}.",
        "invokeDigitalTwinCommandOnError": "Failed to invoke digital twin command '{{commandName}}' for interface '{{interfaceName}}' on device '{{deviceId}}': {{error}}",
        "invokeDigitalTwinCommandOnSuccess": "Successfully invoked digital twin command '{{commandName}}' for interface '{{interfaceName}}' on device '{{deviceId}}': {{response}}",
        "invokingDigitalTwinCommand": "Trying to invoke digital twin command '{{commandName}}' for interface '{{interfaceName}}' on device '{{deviceId}}' with no payload",
        "invokingDigitalTwinCommandWithPayload": "Trying to invoke digital twin command '{{commandName}}' for interface '{{interfaceName}}' on device '{{deviceId}}' with payload {{payload}}",
        "invokeMethodOnError": "Failed to invoke method on device {{deviceId}}: {{error}}",
        "invokeMethodOnSuccess": "Successfully invoked method '{{methodName}}' on device '{{deviceId}}' with response {{response}}",
        "invokingMethod": "Trying to invoke method '{{methodName}}' on device '{{deviceId}}' with no payload",
        "invokingMethodWithPayload": "Trying to invoke method '{{methodName}}' on device '{{deviceId}}' with payload {{payload}}",
        "interfaceSchemaNotSupported": "Property schema '{{schema}}' is not yet supported in UI forms. Please use the JSON editor below to view and update value",
        "deleteDeviceOnSucceed": "Successfully deleted {{count}} device(s)",
        "deleteDeviceOnError": "Failed to delete {{count}} device(s): {{error}}",
        "addDeviceOnSucceed": "Successfully added device {{deviceId}}",
        "addDeviceOnError": "Failed to add device {{deviceId}}: {{error}}",
        "updateDeviceOnSucceed": "Successfully updated device {{deviceId}}",
        "updateDeviceOnError": "Failed to update device {{deviceId}}: {{error}}",
        "patchDigitalTwinInterfacePropertiesOnError": "Failed to update desired properties of digital twin interfaces on device {{deviceId}}: {{error}}",
        "patchDigitalTwinInterfacePropertiesOnSuccess": "Successfully updated desired properties of digital twin interfaces on device {{deviceId}}.",
        "cloudToDeviceMessageOnError": "Failed to send message to device {{deviceId}}: {{error}}",
        "cloudToDeviceMessageOnSuccess": "Successfully send message '{{message}}' to device '{{deviceId}}'",
        "sendingCloudToDeviceMessage": "Trying to send message '{{message}}' to device '{{deviceId}}'"
    },
    "errorBoundary": {
        "text": "Something went wrong"
    },
    "template": {
        "array":{
            "add": "Add an entry",
            "remove": "Remove current entry"
        },
        "collapse": {
            "open": "Open for more information",
            "close": "Collapse"
        }
    }
}
