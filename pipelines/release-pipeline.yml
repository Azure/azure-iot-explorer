trigger: none

variables:
- group: ESRP

jobs:

  - job: build_and_test
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - template: .\build-and-test-template.yml

  - job: packageWindows
    dependsOn: 'build_and_test'

    pool:
      vmImage: 'vs2017-win2016'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
        
    - template: '.\build-windows.yml'

    - task: CopyFiles@2
      displayName: 'ArtifactIgnore'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/'
        Contents: '.artifactignore'
        TargetFolder: '$(Build.SourcesDirectory)/dist/'

    - publish: $(Build.SourcesDirectory)/dist/
      displayName: 'Staging artifact for signing'

  - job: packageMac
    dependsOn: 'build_and_test'

    pool:
      vmImage: 'macos-10.13'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
        
    - template: '.\build-mac.yml'

    - task: CopyFiles@2
      displayName: 'ArtifactIgnore'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/'
        Contents: '.artifactignore'
        TargetFolder: '$(Build.SourcesDirectory)/dist/'

    - publish: $(Build.SourcesDirectory)/dist/
      displayName: 'Staging artifact for signing'

  - job: sign
    dependsOn:
    - packageWindows
    - packageMac
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - template: .\sign-prep-template.yml

    - task: DownloadPipelineArtifact@2
      displayName: 'Stage artifacts for signing'
      inputs:
        buildType: 'current'
        targetPath: '$(Pipeline.Workspace)/staging'

    - powershell: |
        $ErrorActionPreference = "Stop"
        $(Build.SourcesDirectory)/pipelines/sign.ps1 -ESRPClientId $(ESRPClientId) -ClientPath "$(Build.SourcesDirectory)\pipelines\ESRPClient\packages\Microsoft.EsrpClient.1.2.10\tools\" -Path "$(Pipeline.Workspace)/staging"
      displayName: Request code sign
    
    - task: CopyFiles@2
      displayName: 'Flatten signed artifact files for publish'
      inputs:
        SourceFolder: '$(Pipeline.Workspace)/staging'
        Contents: '**'
        FlattenFolders: true
        TargetFolder: '$(Pipeline.Workspace)/release/'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish signed artifacts'
      inputs:
        targetPath: '$(Pipeline.Workspace)/release/'
    
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'Github'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'auto'
        assets: '$(Pipeline.Workspace)/release/*'
        assetUploadMode: 'replace'
        addChangeLog: true
        compareWith: 'lastRelease'
        isDraft: true
